version: "3"
services:
  # appsmith:
  #   image: index.docker.io/appsmith/appsmith-ee
  #   container_name: affiliate-admin
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./stacks:/appsmith-stacks

  nest:
    container_name: rpa-nest
    env_file: ./apps/rpa/.env
    build:
      context: .
      dockerfile: ./apps/rpa/Dockerfile.dev
    volumes:
      - ./apps/rpa:/app/apps/rpa
    ports:
      - '3000:3000'
    networks:
      - affiliate_network

  # drizzle_migration:
  #   container_name: rpa-drizzle_migration
  #   env_file: ./packages/database/.env
  #   build:
  #     context: .
  #     dockerfile: ./packages/database/Dockerfile
  #   volumes:
  #     - ./packages/database:/var/www
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #     - WATCHPACK_POLLING=true
  #     - NODE_ENV=development

  minio:
    image: minio/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./apps/rpa/docker/minio/data:/export
    environment:
      MINIO_ROOT_USER: accesskey
      MINIO_ROOT_PASSWORD: secretkey
    networks:
      - affiliate_network
    command: [ 'server', '/data', '--address', ':9000', '--console-address', ':9001' ]

  createbuckets:
    image: minio/mc
    networks:
      - affiliate_network
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 accesskey secretkey) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/local;
      /usr/bin/mc policy download minio/local;
      exit 0;
      "

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - 8025:8025
      - 1025:1025
    networks:
      - affiliate_network

networks:
  affiliate_network:
    external: true
